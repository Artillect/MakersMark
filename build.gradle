buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

sourceSets.main {
    java {
        srcDirs 'src/main/java', '../HitchCore/src/main/java'
    }
    resources {
        srcDirs 'src/main/resources'
    }
}

version = "2.0.3"
group = "com.hitchh1k3rsguide.makersmark"
archivesBaseName = "makersmark"
def languages = ["en_US", "fr_FR"]

minecraft {
    version = "1.8-11.14.3.1450"
    runDir = "eclipse"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20141130"

    replace "\$CORE_REPLACE\$", "${project.archivesBaseName}"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "languages", languages

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    for (int i = 0; i < languages.size; ++i) {
        String lang = languages[i]
        from(sourceSets.main.resources.srcDirs) {
            include 'assets/*/lang/' + lang + '.lang'

            def coreLang = file('../HitchCore/src/main/resources/assets/hitchcore/lang/' + lang + '.lang').text
            filter { line ->
                def t = coreLang + line
                coreLang = ""
                return t
            }
        }
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', 'assets/*/lang/*.lang'
    }
}

jar {
    manifest
            {
                attributes 'FMLCorePlugin': "com.hitchh1k3rsguide.${project.archivesBaseName}.asm.CorePlugin",
                        'FMLCorePluginContainsFMLMod': "true",
                        'Main-Class': "com.hitchh1k3rsguide.${project.archivesBaseName}.InstallHelp"
            }
}
